---
- name: "Ensure AutoPkg and Munki Directories Exist"
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ autopkgr_user }}"
    group: "{{ autopkgr_group }}"
    mode: 0774
  with_items:
    - "{{ autopkgr_remote_base_path }}"
    - "{{ autopkgr_recipe_override_dir }}"
    - "{{ autopkgr_munki_repo_path }}"
    - "{{ autopkgr_munki_repo_path }}/pkgs"
    - "{{ autopkgr_munki_repo_path }}/pkgsinfo"
    - "{{ autopkgr_munki_repo_path }}/catalogs"
    - "{{ autopkgr_munki_repo_path }}/icons"
    - "{{ autopkgr_munki_repo_path }}/client_resources"
    - "{{ autopkgr_munki_repo_path }}/client_resources/{{ autopkgr_client_resources_name }}"
    - "{{ autopkgr_munki_repo_path }}/client_resources/{{ autopkgr_client_resources_name }}/templates"
    - "{{ autopkgr_munki_repo_path }}/client_resources/{{ autopkgr_client_resources_name }}/resources"
- name: "Gather Post Processor Repos"
  set_fact:
    autopkgr_recipe_repos: |-
      {% set r = autopkgr_recipe_repos %}
      {% if item.enabled is defined %}
      {% if item.enabled %}
      {% set r = r + [item.repo] %}
      {% endif %}
      {% endif %}
      {{ r }}
  with_items:
    - "{{ autopkgr_post_processors }}"
- name: "Build Post Processor Command"
  set_fact:
    autopkgr_post_processor_commands: |
      {% set r = autopkgr_post_processor_commands %}
      {% if item.enabled is defined %}
        {% if item.enabled %}
          {% set r = r + ' --post ' + item.command %}
        {% endif %}
      {% endif %}
      {{ r | trim | replace('\n', '') }}
  with_items:
    - "{{ autopkgr_post_processors }}"
- name: "Apply Munki Configuration Keys"
  osx_defaults:
    domain: com.googlecode.munki.munkiimport
    key: "{{ item.name }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: present
  with_items:
    - "{{ autopkgr_builtin_munki_configuration + autopkgr_munki_configuration }}"
- name: "Apply AutoPkg Configuration Keys"
  osx_defaults:
    domain: com.github.autopkg
    key: "{{ item.name }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    state: present
  with_items:
    - "{{ autopkgr_builtin_autopkg_configuration + autopkgr_autopkg_configuration }}"
- name: "Add + Update Recipe Repos"
  command: "{{ autopkgr_bin_autopkg }} repo-add {{ item }}"
  register: repo_add_results
  changed_when:
    - "'Already up to date.' not in repo_add_results.stdout"
    - "'to RECIPE_SEARCH_DIRS...' in repo_add_results.stdout"
  with_items:
    - "{{ autopkgr_recipe_repos }}"
- name: "Deploy Recipe Overrides"
  copy: "{{ item }}"
  with_dict: "{{ autopkgr_override_files_copy }}"
- name: "Update autopkgr_override_files list"
  set_fact:
    autopkgr_override_files: |
      {% set original = autopkgr_override_files %}
      {% set new = [] %}
      {% for r in autopkgr_override_files_copy %}
        {% if r.dest | basename not in original %}
          {% set new.append(r.dest | basename) %}
        {% endif %}
      {% endfor %}
      {{ original + new }}
- name: "update-trust-info for Recipe Overrides"
  command: "{{ autopkgr_bin_autopkg }} update-trust-info {{ autopkgr_recipe_override_dir }}/{{ item }}"
  async: 30
  poll: 5
  register: update_trust_results
  failed_when:
    - "'t find a recipe for' in update_trust_results.stdout" # Note: this is such a hack. Searching for phrase "Didn't find a recipe for", but the apostrophe is problematic.
  # changed_when:
  with_items: "{{ autopkgr_override_files }}"
  when: "{{ autopkgr_update_trust_info }}"
