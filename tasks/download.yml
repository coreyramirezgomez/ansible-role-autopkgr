- debug:
    msg: "Dictionary Object received: {{ item }}"
    verbosity: 2
- name: autopkgr/tasks/download - Retrive Release Information
  uri:
    url: |-
      {% if item.value.release_version == 'latest' %}
      {{ item.value.github_url }}/latest
      {% else %}
      {{ item.value.github_url }}
      {% endif %}
    return_content: true
  register: release_info
  ignore_errors: true
- name: autopkgr/tasks/download - Download Release
  get_url:
    url: |-
      {% if item.value.release_version == 'latest' %}
      {% set asset_list = release_info.json.assets %}
      {% else %}
      {% for r in release_info.json %}
      {% if item.value.release_version == r.tag_name %}
      {% set asset_list = r.assets %}
      {% endif %}
      {% endfor %}
      {% endif %}
      {% if item.value.first_asset is defined %}
      {% if item.value.first_asset %}
      {{ asset_list.0.browser_download_url }}
      {% endif %}
      {% endif %}
      {% for a in asset_list %}
      {% if item.value.asset_name is defined %}
      {% if a.name == item.value.asset_name %}
      {{ a.browser_download_url }}
      {% endif %}
      {% elif item.value.asset_filetype is defined %}
      {% if item.value.asset_filetype in a.name %}
      {{ a.browser_download_url }}
      {% endif %}
      {% endif %}
      {% endfor %}
    dest: "{{ item.value.download_dest | default('/tmp/', true)}}"
  register: download
- name: autopkgr/tasks/download - Set downloads fact
  set_fact:
    downloads: []
  when: downloads is not defined
- name: autopkgr/tasks/download - Save Download Information
  set_fact:
    downloads: "{{ downloads + [ download.dest ] }}"
- name: autopkgr/tasks/download - Run Post Command
  command: "{{ item.value.post_command }}"
  when: item.value.post_command is defined
